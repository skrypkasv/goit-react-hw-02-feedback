{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","onLeaveFeedback","type","id","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","props","initValue","percentage","leaveFeedback","e","setState","prevState","target","countTotalFeedback","currentState","sumOfFeedbacks","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","Number","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,KCHQ,SAASE,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,sBAAKF,UAAU,WAAf,UACE,wBAAQG,KAAK,SAASC,GAAG,OAAOC,QAASH,EAAzC,iBAGA,wBAAQC,KAAK,SAASC,GAAG,UAAUC,QAASH,EAA5C,qBAGA,wBAAQC,KAAK,SAASC,GAAG,MAAMC,QAASH,EAAxC,oBCTS,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACE,qBAAKX,UAAU,aAAf,SACE,+BACE,wCAAWO,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YCTO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,8BAAMA,I,ICGMC,E,4MAInBC,MAAQ,CACNR,KAAM,EAAKS,MAAMC,UACjBT,QAAS,EAAKQ,MAAMC,UACpBR,IAAK,EAAKO,MAAMC,W,EAGlBP,MAAQ,E,EAERQ,WAAa,E,EAEbC,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAEG,OAAOnB,GAAKkB,EAAUF,EAAEG,OAAOnB,IAAM,O,EAK9CoB,mBAAqB,SAAAC,GACnB,IAAMC,EAAiBC,OAAOC,OAAOH,GAAcI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,GAEvF,OADA,EAAKrB,MAAQgB,EACN,EAAKhB,O,EAGdsB,gCAAkC,SAAAP,GAEhC,OADA,EAAKP,WAAae,KAAKC,MAA6E,IAAvEC,OAAOV,EAAalB,MAAQ,EAAKG,MAAQe,EAAajB,UAAY,IACxF,EAAKU,Y,uDAMZ,OAFAkB,KAAKZ,mBAAmBY,KAAKrB,OAC7BqB,KAAKJ,gCAAgCI,KAAKrB,OAExC,sBAAKf,UAAU,YAAf,UACE,cAACH,EAAD,CAASC,MAAM,wBAAf,SACE,cAACG,EAAD,CAAiBC,gBAAiBkC,KAAKjB,kBAEzC,cAACtB,EAAD,CAASC,MAAM,aAAf,SACGsC,KAAK1B,MACJ,cAACJ,EAAD,CAAYC,KAAM6B,KAAKrB,MAAMR,KAAMC,QAAS4B,KAAKrB,MAAMP,QAASC,IAAK2B,KAAKrB,MAAMN,IAAKC,MAAO0B,KAAK1B,MAAOC,mBAAoByB,KAAKlB,aAEjI,cAACN,EAAD,CAAcC,QAAQ,+B,GA7CDwB,aAAZvB,EACZwB,aAAe,CAAErB,UAAW,GCFrCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKxB,UAAW,MAElByB,SAASC,eAAe,W","file":"static/js/main.eed74a9b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2 className=\"title\">{title}</h2>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n// import styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <div className=\"feedback\">\n      <button type=\"button\" id=\"good\" onClick={onLeaveFeedback}>\n        God\n      </button>\n      <button type=\"button\" id=\"neutral\" onClick={onLeaveFeedback}>\n        Neutral\n      </button>\n      <button type=\"button\" id=\"bad\" onClick={onLeaveFeedback}>\n        Bad\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\n// import styles from './Statistics.module.css';\n\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className=\"statistics\">\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Notification({ message }) {\n  return <div>{message}</div>;\n}\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  static defaultProps = { initValue: 0 };\n  static propTypes = {};\n\n  state = {\n    good: this.props.initValue,\n    neutral: this.props.initValue,\n    bad: this.props.initValue,\n  };\n\n  total = 0;\n\n  percentage = 0;\n\n  leaveFeedback = e => {\n    this.setState(prevState => {\n      return {\n        [e.target.id]: prevState[e.target.id] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = currentState => {\n    const sumOfFeedbacks = Object.values(currentState).reduce((acc, value) => acc + value, 0);\n    this.total = sumOfFeedbacks;\n    return this.total;\n  };\n\n  countPositiveFeedbackPercentage = currentState => {\n    this.percentage = Math.round(Number(currentState.good / (this.total - currentState.neutral) || 0) * 100);\n    return this.percentage;\n  };\n\n  render() {\n    this.countTotalFeedback(this.state);\n    this.countPositiveFeedbackPercentage(this.state);\n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.leaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.total ? (\n            <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={this.total} positivePercentage={this.percentage} />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App initValue={0} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}